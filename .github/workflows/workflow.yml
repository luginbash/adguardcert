name: Build and deploy

on:
  push:
    branches:
      - "*"
    tags:
      - v*
  pull_request:
  workflow_dispatch:
    inputs:
      cert_hash:
        description: "certificate hash from `openssl rehash` or c_rehash"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: build dist
        env:
          CERT_HASH: "${{ github.event.inputs.cert_hash }}"
        run: |
          echo "[INFO] replacing AG_CERT_HASH with ${CERT_HASH}"
          ./dist.sh
          ls -la

      - name: create release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          artifacts: "adguardcert-*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          prerelease: ${{ contains(github.ref, '-') }}

      - name: write PR url
        if: github.event_name == 'pull_request'
        run: |
          echo "${{ github.event.pull_request.html_url }}" > pull_request_url.txt

      - name: upload artifact
        uses: actions/upload-artifact@v3
        if: github.event_name == 'pull_request'
        with:
          name: adguardcert module build
          path: |
            adguardcert-*.zip
            README.md
            pull_request_url.txt

      - name: update json
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com>"
          git config user.name "github-actions[bot]"
          git fetch origin
          ./update.sh
          git push origin master
          ls -la
